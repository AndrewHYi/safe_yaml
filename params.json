{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"SafeYAML","tagline":"Parse YAML safely, without that pesky arbitrary object deserialization vulnerability","google":"","body":"SafeYAML\r\n========\r\n\r\nThe **SafeYAML** gem provides an alternative implementation of `YAML.load` suitable for accepting user input in Ruby applications. Unlike Ruby's built-in implementation of `YAML.load`, SafeYAML's version will not expose apps to arbitrary code execution exploits (such as [the one recently discovered in Rails](http://www.reddit.com/r/netsec/comments/167c11/serious_vulnerability_in_ruby_on_rails_allowing/) (or [this one](http://www.h-online.com/open/news/item/Rails-developers-close-another-extremely-critical-flaw-1793511.html))).\r\n\r\nInstallation\r\n------------\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem \"safe_yaml\"\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install safe_yaml\r\n\r\nPurpose\r\n-------\r\n\r\nSuppose your application were to contain some code like this:\r\n\r\n```ruby\r\nclass ExploitableClassBuilder\r\n  def []=(key, value)\r\n    @class ||= Class.new\r\n\r\n    @class.class_eval <<-EOS\r\n      def #{key}\r\n        #{value}\r\n      end\r\n    EOS\r\n  end\r\n\r\n  def create\r\n    @class.new\r\n  end\r\nend\r\n```\r\n\r\nNow, if you were to use `YAML.load` on user input anywhere in your application without the SafeYAML gem installed, an attacker could make a request with a carefully-crafted YAML string to execute arbitrary code (yes, including `system(\"unix command\")`) on your servers.\r\n\r\nObserve:\r\n\r\n    > yaml = <<-EOYAML\r\n    > --- !ruby/hash:ExploitableClassBuilder\r\n    > \"foo; end; puts %(I'm in yr system!); def bar\": \"baz\"\r\n    > EOYAML\r\n    => \"--- !ruby/hash:ExploitableClassBuilder\\n\\\"foo; end; puts %(I'm in yr system!); def bar\\\": \\\"baz\\\"\\n\"\r\n    \r\n    > YAML.load(yaml)\r\n    I'm in yr system!\r\n    => #<ExploitableClassBuilder:0x007fdbbe2e25d8 @class=#<Class:0x007fdbbe2e2510>>\r\n\r\nWith SafeYAML, that attacker would be thwarted:\r\n\r\n    > require \"safe_yaml\"\r\n    => true\r\n    > YAML.load(yaml)\r\n    => {\"foo; end; puts %(I'm in yr system!); def bar\"=>\"baz\"}\r\n\r\nUsage\r\n-----\r\n\r\n`YAML.safe_load` will load YAML without allowing arbitrary object deserialization.\r\n\r\n`YAML.unsafe_load` will exhibit Ruby's built-in behavior: to allow the deserialization of arbitrary objects.\r\n\r\nBy default, when you require the safe_yaml gem in your project, `YAML.load` is patched to internally call `safe_load`. The patched method also accepts a `:safe` flag to specify which version to use:\r\n\r\n    # Ruby >= 1.9.3\r\n    YAML.load(yaml, filename, :safe => true) # calls safe_load\r\n    YAML.load(yaml, filename, :safe => false) # calls unsafe_load\r\n\r\n    # Ruby < 1.9.3\r\n    YAML.load(yaml, :safe => true) # calls safe_load\r\n    YAML.load(yaml, :safe => false) # calls unsafe_load\r\n\r\nThe default behavior can be switched to unsafe loading by calling `YAML.enable_arbitrary_object_deserialization!`. In this case, the `:safe` flag still has the same effect, but the defaults are reversed (so calling `YAML.load` will have the same behavior as if the safe_yaml gem weren't required).\r\n\r\nNotes\r\n-----\r\n\r\nThe way that SafeYAML works is by restricting the kinds of objects that can be deserialized via `YAML.load`. More specifically, only the following types of objects can be deserialized by default:\r\n\r\n- Hashes\r\n- Arrays\r\n- Strings\r\n- Numbers\r\n- Dates\r\n- Times\r\n- Booleans\r\n- Nils\r\n\r\nAdditionally, deserialization of symbols can be enabled by calling `YAML.enable_symbol_parsing!`.\r\n\r\nCaveat\r\n------\r\n\r\nObviously this gem is quite young, and so the API may (read: will) change in future versions. The goal of the gem is to make it as easy as possible to protect existing applications from object deserialization exploits. Any and all feedback is more than welcome.\r\n\r\nRequirements\r\n------------\r\n\r\nSafeYAML requires Ruby 1.8.7 or newer and works with both [Syck](http://www.ruby-doc.org/stdlib-1.8.7/libdoc/yaml/rdoc/YAML.html) and [Psych](http://github.com/tenderlove/psych).\r\n"}